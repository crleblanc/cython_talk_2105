# ipython script to do timings on various sin implementations
from __future__ import print_function
import py_sin
import numpy as np
import cy_sin
import c_wrap_sin

callables = (('pure Python', py_sin.sin),
             ('Numpy ufunc', np.sin),
             ('Cython slow func', cy_sin.cython_sin_slow),
             ('Cython faster func', cy_sin.cython_sin),
             ('Cython func, memviews, typed memoryviews', cy_sin.cython_sin_memview),
             ('Cython func, C wrapper', c_wrap_sin.c_wrapper))

for name, func in callables:
    lengths = [1000000]

    for length in lengths:
        work_array = np.arange(length, dtype=np.float64)
        print(name + ': ', end='')
        %timeit func(work_array)
